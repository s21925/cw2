MongoDB shell version v4.4.4
connecting to: mongodb://127.0.0.1:27017/people2?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("92afef15-6b89-43bf-926f-590bfc3fbb40") }
MongoDB server version: 4.4.4
{
	"_batch" : [
		{
			"_id" : "Lesotho",
			"minimalBMI" : 19.804653958825412,
			"averageBMI" : 25.35989698056186,
			"maximalBMI" : 30.164460328890495
		},
		{
			"_id" : "Canada",
			"minimalBMI" : 16.408314613251758,
			"averageBMI" : 25.357263741380066,
			"maximalBMI" : 33.61303753837222
		},
		{
			"_id" : "Seychelles",
			"minimalBMI" : 25.710551755136727,
			"averageBMI" : 25.710551755136727,
			"maximalBMI" : 25.710551755136727
		},
		{
			"_id" : "Gabon",
			"minimalBMI" : 22.266802561601597,
			"averageBMI" : 25.657536728265534,
			"maximalBMI" : 29.04827089492947
		},
		{
			"_id" : "Mauritius",
			"minimalBMI" : 19.225308641975307,
			"averageBMI" : 25.493607821171015,
			"maximalBMI" : 38.86342108446306
		},
		{
			"_id" : "Cameroon",
			"minimalBMI" : 19.681646953380184,
			"averageBMI" : 24.6366953354223,
			"maximalBMI" : 33.171539196923106
		},
		{
			"_id" : "Dominica",
			"minimalBMI" : 26.42147612552151,
			"averageBMI" : 26.42147612552151,
			"maximalBMI" : 26.42147612552151
		},
		{
			"_id" : "Albania",
			"minimalBMI" : 18.995343497963386,
			"averageBMI" : 24.708938287604877,
			"maximalBMI" : 31.98582559382973
		},
		{
			"_id" : "Iraq",
			"minimalBMI" : 17.811382149213077,
			"averageBMI" : 24.097732336776872,
			"maximalBMI" : 33.23798843565602
		},
		{
			"_id" : "Guatemala",
			"minimalBMI" : 19.619608992088942,
			"averageBMI" : 25.59592341793013,
			"maximalBMI" : 32.13075314700059
		},
		{
			"_id" : "Guinea",
			"minimalBMI" : 20.460478773371793,
			"averageBMI" : 27.9142215967982,
			"maximalBMI" : 34.462128538412365
		},
		{
			"_id" : "Kiribati",
			"minimalBMI" : 23.104683336146245,
			"averageBMI" : 23.104683336146245,
			"maximalBMI" : 23.104683336146245
		},
		{
			"_id" : "Paraguay",
			"minimalBMI" : 21.194188847738655,
			"averageBMI" : 25.118908017345476,
			"maximalBMI" : 32.97774797284501
		},
		{
			"_id" : "Italy",
			"minimalBMI" : 18.626656995429222,
			"averageBMI" : 25.224448562759804,
			"maximalBMI" : 31.28284127929142
		},
		{
			"_id" : "Greenland",
			"minimalBMI" : 25.87231726224435,
			"averageBMI" : 25.87231726224435,
			"maximalBMI" : 25.87231726224435
		},
		{
			"_id" : "Montenegro",
			"minimalBMI" : 20.73659089443422,
			"averageBMI" : 24.00617071684226,
			"maximalBMI" : 29.526909667433987
		},
		{
			"_id" : "Netherlands",
			"minimalBMI" : 19.37514915181097,
			"averageBMI" : 26.02467655953886,
			"maximalBMI" : 34.91379070141339
		},
		{
			"_id" : "Denmark",
			"minimalBMI" : 21.08473436367003,
			"averageBMI" : 23.570666794473013,
			"maximalBMI" : 27.824860598421296
		},
		{
			"_id" : "Bulgaria",
			"minimalBMI" : 18.415763633181026,
			"averageBMI" : 24.309744266991725,
			"maximalBMI" : 32.5985033633058
		},
		{
			"_id" : "Croatia",
			"minimalBMI" : 18.791459338166646,
			"averageBMI" : 24.859825049169952,
			"maximalBMI" : 38.54454850434303
		},
		{
			"_id" : "Syria",
			"minimalBMI" : 18.668899303500158,
			"averageBMI" : 25.379241567006584,
			"maximalBMI" : 36.4017489356862
		},
		{
			"_id" : "Liberia",
			"minimalBMI" : 22.64819265750957,
			"averageBMI" : 25.901546538832037,
			"maximalBMI" : 29.63330910128883
		},
		{
			"_id" : "Switzerland",
			"minimalBMI" : 20.192102704387423,
			"averageBMI" : 25.70946937867775,
			"maximalBMI" : 31.153535521833074
		},
		{
			"_id" : "Niger",
			"minimalBMI" : 20.07204296186382,
			"averageBMI" : 26.384679570852143,
			"maximalBMI" : 30.22683231486928
		},
		{
			"_id" : "Marshall Islands",
			"minimalBMI" : 22.403515045781823,
			"averageBMI" : 24.4362224388107,
			"maximalBMI" : 26.899880561973735
		},
		{
			"_id" : "Cape Verde",
			"minimalBMI" : 19.20724222151505,
			"averageBMI" : 25.33466174988547,
			"maximalBMI" : 35.04527266278727
		},
		{
			"_id" : "Senegal",
			"minimalBMI" : 21.10083404913989,
			"averageBMI" : 23.415570863855162,
			"maximalBMI" : 26.591448446940536
		},
		{
			"_id" : "French Polynesia",
			"minimalBMI" : 20.299688460981415,
			"averageBMI" : 25.351408860541465,
			"maximalBMI" : 28.539227949185673
		},
		{
			"_id" : "Malaysia",
			"minimalBMI" : 18.54461856797744,
			"averageBMI" : 25.61238899059476,
			"maximalBMI" : 36.53428355033911
		},
		{
			"_id" : "Colombia",
			"minimalBMI" : 17.766168088813238,
			"averageBMI" : 25.68656089567334,
			"maximalBMI" : 35.4010351305359
		},
		{
			"_id" : "United Arab Emirates",
			"minimalBMI" : 23.390978608691807,
			"averageBMI" : 26.572025231735637,
			"maximalBMI" : 29.753071854779463
		},
		{
			"_id" : "Burkina Faso",
			"minimalBMI" : 19.874924416260065,
			"averageBMI" : 27.581473331497783,
			"maximalBMI" : 39.84736448162324
		},
		{
			"_id" : "Zambia",
			"minimalBMI" : 20.338719513529025,
			"averageBMI" : 25.857875377943596,
			"maximalBMI" : 31.44864603504859
		},
		{
			"_id" : "Kazakhstan",
			"minimalBMI" : 16.8070799358325,
			"averageBMI" : 25.872296835537167,
			"maximalBMI" : 36.896740125150984
		},
		{
			"_id" : "Dominican Republic",
			"minimalBMI" : 18.01287119956941,
			"averageBMI" : 23.94786171912194,
			"maximalBMI" : 30.32549350733766
		},
		{
			"_id" : "Serbia",
			"minimalBMI" : 18.75880119586755,
			"averageBMI" : 25.670277460078474,
			"maximalBMI" : 43.54832804682019
		},
		{
			"_id" : "Chad",
			"minimalBMI" : 19.379712122869797,
			"averageBMI" : 25.90576302097001,
			"maximalBMI" : 32.14867661954464
		},
		{
			"_id" : "Spain",
			"minimalBMI" : 21.71883995935713,
			"averageBMI" : 26.172174392961136,
			"maximalBMI" : 34.9356602063431
		},
		{
			"_id" : "Lebanon",
			"minimalBMI" : 22.696782965005376,
			"averageBMI" : 27.50900155800487,
			"maximalBMI" : 32.444431072334524
		},
		{
			"_id" : "Northern Mariana Islands",
			"minimalBMI" : 25.912320610983855,
			"averageBMI" : 25.912320610983855,
			"maximalBMI" : 25.912320610983855
		},
		{
			"_id" : "Taiwan",
			"minimalBMI" : 20.359929764833222,
			"averageBMI" : 26.610153474174844,
			"maximalBMI" : 31.171391695878288
		},
		{
			"_id" : "Nauru",
			"minimalBMI" : 22.91236113053845,
			"averageBMI" : 22.91236113053845,
			"maximalBMI" : 22.91236113053845
		},
		{
			"_id" : "Tonga",
			"minimalBMI" : 23.8293086776095,
			"averageBMI" : 23.8293086776095,
			"maximalBMI" : 23.8293086776095
		},
		{
			"_id" : "Aland Islands",
			"minimalBMI" : 22.422508995430604,
			"averageBMI" : 28.16261648965891,
			"maximalBMI" : 33.92911214898956
		},
		{
			"_id" : "South Korea",
			"minimalBMI" : 17.724971165813702,
			"averageBMI" : 24.516246096774278,
			"maximalBMI" : 31.35384445026281
		},
		{
			"_id" : "Bolivia",
			"minimalBMI" : 20.461244736382792,
			"averageBMI" : 25.291606754307583,
			"maximalBMI" : 32.04862302606189
		},
		{
			"_id" : "Rwanda",
			"minimalBMI" : 22.834957662274157,
			"averageBMI" : 25.960475188853895,
			"maximalBMI" : 27.60395919371098
		},
		{
			"_id" : "Slovenia",
			"minimalBMI" : 17.370385779694157,
			"averageBMI" : 25.041680484394,
			"maximalBMI" : 32.66109875399449
		},
		{
			"_id" : "Latvia",
			"minimalBMI" : 18.435535988693054,
			"averageBMI" : 26.634771177397017,
			"maximalBMI" : 32.88731053562053
		},
		{
			"_id" : "Luxembourg",
			"minimalBMI" : 19.267057864459574,
			"averageBMI" : 26.311128380021454,
			"maximalBMI" : 33.21935122648016
		},
		{
			"_id" : "Myanmar",
			"minimalBMI" : 20.99743660839639,
			"averageBMI" : 25.964386191009897,
			"maximalBMI" : 31.448459395139455
		},
		{
			"_id" : "Morocco",
			"minimalBMI" : 20.182304322324796,
			"averageBMI" : 25.87499924181595,
			"maximalBMI" : 32.90604019213787
		},
		{
			"_id" : "Austria",
			"minimalBMI" : 23.01532709975852,
			"averageBMI" : 27.93883177972952,
			"maximalBMI" : 37.259975846114166
		},
		{
			"_id" : "American Samoa",
			"minimalBMI" : 22.398336918076584,
			"averageBMI" : 22.398336918076584,
			"maximalBMI" : 22.398336918076584
		},
		{
			"_id" : "Armenia",
			"minimalBMI" : 19.17386933002285,
			"averageBMI" : 24.941789322543038,
			"maximalBMI" : 31.668511004463014
		},
		{
			"_id" : "Slovakia",
			"minimalBMI" : 21.338818810983465,
			"averageBMI" : 21.338818810983465,
			"maximalBMI" : 21.338818810983465
		},
		{
			"_id" : "New Zealand",
			"minimalBMI" : 20.015037796508505,
			"averageBMI" : 25.359794144919384,
			"maximalBMI" : 33.708938690778766
		},
		{
			"_id" : "Panama",
			"minimalBMI" : 20.497034879989776,
			"averageBMI" : 24.992264629881035,
			"maximalBMI" : 33.204916913317156
		},
		{
			"_id" : "Sri Lanka",
			"minimalBMI" : 20.744421581687575,
			"averageBMI" : 24.576523965721474,
			"maximalBMI" : 28.60361966419167
		},
		{
			"_id" : "United Kingdom",
			"minimalBMI" : 19.427928671881645,
			"averageBMI" : 23.785736038981,
			"maximalBMI" : 31.903158982438534
		},
		{
			"_id" : "Ecuador",
			"minimalBMI" : 19.837789435759387,
			"averageBMI" : 25.66255028757021,
			"maximalBMI" : 31.540757595400457
		},
		{
			"_id" : "Kyrgyzstan",
			"minimalBMI" : 16.846474930530864,
			"averageBMI" : 23.79456317353873,
			"maximalBMI" : 34.05576978971841
		},
		{
			"_id" : "Western Sahara",
			"minimalBMI" : 22.75109226188259,
			"averageBMI" : 22.75109226188259,
			"maximalBMI" : 22.75109226188259
		},
		{
			"_id" : "Bahamas",
			"minimalBMI" : 22.243665360172294,
			"averageBMI" : 24.994816322414778,
			"maximalBMI" : 26.596494551398333
		},
		{
			"_id" : "Cyprus",
			"minimalBMI" : 22.195141736787935,
			"averageBMI" : 25.19379219201182,
			"maximalBMI" : 29.825489728395752
		},
		{
			"_id" : "Saint Lucia",
			"minimalBMI" : 20.263359356035604,
			"averageBMI" : 23.007900513203566,
			"maximalBMI" : 27.57036153167093
		},
		{
			"_id" : "Madagascar",
			"minimalBMI" : 17.556666479697988,
			"averageBMI" : 24.78315354739493,
			"maximalBMI" : 30.189583737327382
		},
		{
			"_id" : "Azerbaijan",
			"minimalBMI" : 18.770569815679924,
			"averageBMI" : 25.953521178074688,
			"maximalBMI" : 36.93348217200575
		},
		{
			"_id" : "Equatorial Guinea",
			"minimalBMI" : 24.784158605052227,
			"averageBMI" : 24.784158605052227,
			"maximalBMI" : 24.784158605052227
		},
		{
			"_id" : "Palau",
			"minimalBMI" : 29.238705428689137,
			"averageBMI" : 29.619032693868498,
			"maximalBMI" : 29.99935995904786
		},
		{
			"_id" : "Ghana",
			"minimalBMI" : 19.513811851275083,
			"averageBMI" : 25.211449181938868,
			"maximalBMI" : 32.50433727787583
		},
		{
			"_id" : "Nepal",
			"minimalBMI" : 19.748973244733463,
			"averageBMI" : 26.43434938647296,
			"maximalBMI" : 31.078489717648623
		},
		{
			"_id" : "Oman",
			"minimalBMI" : 23.599509054084226,
			"averageBMI" : 25.688221135833004,
			"maximalBMI" : 27.084022161790852
		},
		{
			"_id" : "Suriname",
			"minimalBMI" : 30.38931494743512,
			"averageBMI" : 30.38931494743512,
			"maximalBMI" : 30.38931494743512
		},
		{
			"_id" : "Tuvalu",
			"minimalBMI" : 22.60418435695907,
			"averageBMI" : 22.60418435695907,
			"maximalBMI" : 22.60418435695907
		},
		{
			"_id" : "Belize",
			"minimalBMI" : 18.424047224128543,
			"averageBMI" : 23.220039319907464,
			"maximalBMI" : 26.22341661344843
		},
		{
			"_id" : "Pakistan",
			"minimalBMI" : 17.507302336811122,
			"averageBMI" : 25.02816349688192,
			"maximalBMI" : 35.54144749573527
		},
		{
			"_id" : "Australia",
			"minimalBMI" : 20.65310909810227,
			"averageBMI" : 25.195047158310075,
			"maximalBMI" : 29.824555993432554
		},
		{
			"_id" : "Guadeloupe",
			"minimalBMI" : 19.1723096007283,
			"averageBMI" : 20.619298326605616,
			"maximalBMI" : 22.066287052482927
		},
		{
			"_id" : "Malta",
			"minimalBMI" : 22.120384249306703,
			"averageBMI" : 26.169580448971242,
			"maximalBMI" : 36.01978908588236
		},
		{
			"_id" : "Malawi",
			"minimalBMI" : 23.29026327914253,
			"averageBMI" : 27.299142700133018,
			"maximalBMI" : 30.498934041274012
		},
		{
			"_id" : "Mali",
			"minimalBMI" : 19.246685556164678,
			"averageBMI" : 24.919410302759925,
			"maximalBMI" : 31.67016743066081
		},
		{
			"_id" : "Reunion",
			"minimalBMI" : 18.72890348175829,
			"averageBMI" : 26.421775697845288,
			"maximalBMI" : 39.16506059010436
		},
		{
			"_id" : "Central African Republic",
			"minimalBMI" : 19.614899401982278,
			"averageBMI" : 23.916787330266967,
			"maximalBMI" : 28.954561237220556
		},
		{
			"_id" : "Jordan",
			"minimalBMI" : 17.289044939043503,
			"averageBMI" : 25.603840773092998,
			"maximalBMI" : 32.353159768034715
		},
		{
			"_id" : "Norway",
			"minimalBMI" : 19.602504292612466,
			"averageBMI" : 27.012053304746868,
			"maximalBMI" : 35.1671816861818
		},
		{
			"_id" : "Ethiopia",
			"minimalBMI" : 20.55367285745029,
			"averageBMI" : 25.47396595279003,
			"maximalBMI" : 32.85411863239378
		},
		{
			"_id" : "Ukraine",
			"minimalBMI" : 16.525546999186044,
			"averageBMI" : 25.087610733459513,
			"maximalBMI" : 36.84222756372365
		},
		{
			"_id" : "Vanuatu",
			"minimalBMI" : 23.049311522774556,
			"averageBMI" : 24.697548912916897,
			"maximalBMI" : 27.20784148023659
		},
		{
			"_id" : "Zimbabwe",
			"minimalBMI" : 22.609825375832813,
			"averageBMI" : 26.97591880240733,
			"maximalBMI" : 35.12027773402992
		},
		{
			"_id" : "Bangladesh",
			"minimalBMI" : 19.809821191475773,
			"averageBMI" : 26.693456288940414,
			"maximalBMI" : 34.06297114172176
		},
		{
			"_id" : "Bosnia and Herzegovina",
			"minimalBMI" : 16.930664311421886,
			"averageBMI" : 25.418629730315736,
			"maximalBMI" : 35.97395007994128
		},
		{
			"_id" : "Chile",
			"minimalBMI" : 16.9512916270108,
			"averageBMI" : 24.869680560672286,
			"maximalBMI" : 29.79885840825515
		},
		{
			"_id" : "Georgia",
			"minimalBMI" : 19.907789367690288,
			"averageBMI" : 24.320295824417713,
			"maximalBMI" : 27.6963070482808
		},
		{
			"_id" : "Costa Rica",
			"minimalBMI" : 20.494010942211922,
			"averageBMI" : 24.650437337200202,
			"maximalBMI" : 28.898569613792333
		},
		{
			"_id" : "Sierra Leone",
			"minimalBMI" : 19.49887642053163,
			"averageBMI" : 25.11304222749876,
			"maximalBMI" : 33.448269454681686
		},
		{
			"_id" : "Palestinian Territory",
			"minimalBMI" : 19.179525110549182,
			"averageBMI" : 25.51977107836518,
			"maximalBMI" : 35.54150728191122
		},
		{
			"_id" : "Kosovo",
			"minimalBMI" : 19.254012570630334,
			"averageBMI" : 24.13095183240382,
			"maximalBMI" : 29.624326587170813
		},
		{
			"_id" : "Japan",
			"minimalBMI" : 18.90452276508069,
			"averageBMI" : 25.288979118123063,
			"maximalBMI" : 37.208271542614156
		},
		{
			"_id" : "Togo",
			"minimalBMI" : 21.483089176370907,
			"averageBMI" : 23.268539811569163,
			"maximalBMI" : 24.559999693631624
		},
		{
			"_id" : "Ivory Coast",
			"minimalBMI" : 20.497202679469442,
			"averageBMI" : 26.739162218304372,
			"maximalBMI" : 35.26565858224913
		}
	],
	"_useReadCommands" : true,
	"_cursorid" : NumberLong("3419832512084636400"),
	"_batchSize" : undefined,
	"_maxAwaitTimeMS" : undefined,
	"_txnNumber" : undefined,
	"_ns" : "people2.people",
	"_db" : people2,
	"_collName" : "people",
	"_cursorHandle" : {
		
	},
	"isClosed" : function() {
    if (this._useReadCommands) {
        return bsonWoCompare({_: this._cursorid}, {_: NumberLong(0)}) === 0;
    }
    return this._cursor.isClosed();
},
	"isExhausted" : function() {
    return this.isClosed() && this.objsLeftInBatch() === 0;
},
	"close" : function() {
    if (!this._useReadCommands) {
        this._cursor.close();
    } else if (bsonWoCompare({_: this._cursorid}, {_: NumberLong(0)}) !== 0) {
        var killCursorCmd = {
            killCursors: this._collName,
            cursors: [this._cursorid],
        };
        var cmdRes = this._db.runCommand(killCursorCmd);
        if (cmdRes.ok != 1) {
            throw _getErrorWithCode(cmdRes, "killCursors command failed: " + tojson(cmdRes));
        }

        this._cursorHandle.zeroCursorId();
        this._cursorid = NumberLong(0);
    }
},
	"_updatePostBatchResumeToken" : function(cursorObj) {
    if (cursorObj.postBatchResumeToken) {
        this._postBatchResumeToken = cursorObj.postBatchResumeToken;
        if ((cursorObj.firstBatch || cursorObj.nextBatch).length === 0) {
            this._resumeToken = this._postBatchResumeToken;
        }
        this._isChangeStream = true;
    }
},
	"_runGetMoreCommand" : function() {
    // Construct the getMore command.
    var getMoreCmd = {getMore: this._cursorid, collection: this._collName};

    if (this._batchSize) {
        getMoreCmd["batchSize"] = this._batchSize;
    }

    // maxAwaitTimeMS is only supported when using read commands.
    if (this._maxAwaitTimeMS) {
        getMoreCmd.maxTimeMS = this._maxAwaitTimeMS;
    }

    if (this._txnNumber) {
        getMoreCmd.txnNumber = NumberLong(this._txnNumber);
        getMoreCmd.autocommit = false;
    }

    // Deliver the getMore command, and check for errors in the response.
    var cmdRes = this._db.runCommand(getMoreCmd);
    assert.commandWorked(cmdRes, () => "getMore command failed: " + tojson(cmdRes));

    if (this._ns !== cmdRes.cursor.ns) {
        throw Error("unexpected collection in getMore response: " + this._ns +
                    " != " + cmdRes.cursor.ns);
    }

    if (!cmdRes.cursor.id.compare(NumberLong("0"))) {
        this._cursorHandle.zeroCursorId();
        this._cursorid = NumberLong("0");
    } else if (this._cursorid.compare(cmdRes.cursor.id)) {
        throw Error("unexpected cursor id: " + this._cursorid.toString() +
                    " != " + cmdRes.cursor.id.toString());
    }

    // If the command result represents a change stream cursor, update our postBatchResumeToken.
    this._updatePostBatchResumeToken(cmdRes.cursor);

    // Successfully retrieved the next batch.
    this._batch = cmdRes.cursor.nextBatch.reverse();
},
	"_hasNextUsingCommands" : function() {
    assert(this._useReadCommands);

    if (!this._batch.length) {
        if (!this._cursorid.compare(NumberLong("0"))) {
            return false;
        }

        this._runGetMoreCommand();
    }

    return this._batch.length > 0;
},
	"hasNext" : function() {
    if (this._useReadCommands) {
        return this._hasNextUsingCommands();
    }

    return this._batch.length || this._cursor.hasNext();
},
	"next" : function() {
    if (this._batch.length) {
        // Pop the next result off the batch.
        const nextDoc = this._batch.pop();
        if (this._isChangeStream) {
            // If this is the last result in the batch, the postBatchResumeToken becomes the current
            // resume token for the cursor. Otherwise, the resume token is the _id of 'nextDoc'.
            this._resumeToken = (this._batch.length ? nextDoc._id : this._postBatchResumeToken);
        }
        return nextDoc;
    } else if (this._useReadCommands) {
        // Have to call hasNext() here, as this is where we may issue a getMore in order to retrieve
        // the next batch of results.
        if (!this.hasNext())
            throw Error("error hasNext: false");
        return this._batch.pop();
    } else {
        if (!this._cursor.hasNext())
            throw Error("error hasNext: false");

        var ret = this._cursor.next();
        if (ret.$err)
            throw _getErrorWithCode(ret, "error: " + tojson(ret));
        return ret;
    }
},
	"objsLeftInBatch" : function() {
    if (this._useReadCommands) {
        return this._batch.length;
    } else if (this._batch.length) {
        return this._batch.length;
    } else {
        return this._cursor.objsLeftInBatch();
    }
},
	"getId" : function() {
    return this._cursorid;
},
	"getResumeToken" : function() {
    // Return the most recent recorded resume token, if such a token exists.
    return this._resumeToken;
},
	"help" : function() {
    // This is the same as the "Cursor Methods" section of DBQuery.help().
    print("\nCursor methods");
    print("\t.toArray() - iterates through docs and returns an array of the results");
    print("\t.forEach( func )");
    print("\t.map( func )");
    print("\t.hasNext()");
    print("\t.next()");
    print(
        "\t.objsLeftInBatch() - returns count of docs left in current batch (when exhausted, a new getMore will be issued)");
    print("\t.itcount() - iterates through documents and counts them");
    print(
        "\t.getResumeToken() - for a change stream cursor, obtains the most recent valid resume token, if it exists.");
    print("\t.pretty() - pretty print each document, possibly over multiple lines");
    print("\t.close()");
},
	"toArray" : function() {
    if (this._arr)
        return this._arr;

    var a = [];
    while (this.hasNext())
        a.push(this.next());
    this._arr = a;
    return a;
},
	"forEach" : function(func) {
    while (this.hasNext())
        func(this.next());
},
	"map" : function(func) {
    var a = [];
    while (this.hasNext())
        a.push(func(this.next()));
    return a;
},
	"itcount" : function() {
    var num = 0;

    // Track how many bytes we've used this cursor to iterate iterated.  This function can be called
    // with some very large cursors.  SpiderMonkey appears happy to allow these objects to
    // accumulate, so regular gc() avoids an overly large memory footprint.
    //
    // TODO: migrate this function into c++
    var bytesSinceGC = 0;

    while (this.hasNext()) {
        num++;
        var nextDoc = this.next();
        bytesSinceGC += Object.bsonsize(nextDoc);

        // Garbage collect every 10 MB.
        if (bytesSinceGC > (10 * 1024 * 1024)) {
            bytesSinceGC = 0;
            gc();
        }
    }
    return num;
},
	"shellPrint" : function() {
    try {
        var start = new Date().getTime();
        var n = 0;
        while (this.hasNext() && n < DBQuery.shellBatchSize) {
            var s = this._prettyShell ? tojson(this.next()) : tojson(this.next(), "", true);
            print(s);
            n++;
        }
        if (typeof _verboseShell !== 'undefined' && _verboseShell) {
            var time = new Date().getTime() - start;
            print("Fetched " + n + " record(s) in " + time + "ms");
        }
        if (this.hasNext()) {
            print("Type \"it\" for more");
            ___it___ = this;
        } else {
            ___it___ = null;
        }
    } catch (e) {
        print(e);
    }
},
	"pretty" : function() {
    this._prettyShell = true;
    return this;
}
}
